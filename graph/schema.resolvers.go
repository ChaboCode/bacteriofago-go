package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"github.com/ChaboCode/bacteriofago/graph/model"
)

// CreateMedicine is the resolver for the createMedicine field.
func (r *mutationResolver) CreateMedicine(ctx context.Context, input model.NewMedicine) (*model.Medicine, error) {
	var medicine model.Medicine
	medicine.Name = input.Name
	medicine.Active = input.Active
	return &medicine, nil
}

// Medicines is the resolver for the medicines field.
func (r *queryResolver) Medicines(ctx context.Context) ([]*model.Medicine, error) {
        var medicines []*model.Medicine
        dummyMedicine := model.Medicine{
                Name: "dummy medicine",
                Active: "ibuprofeno",
        }
        medicines = append(medicines, &dummyMedicine)
        return medicines, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
